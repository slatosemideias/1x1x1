-- ===========================================
-- NOTIFICA√á√ÉO DE IN√çCIO
-- ===========================================
game:GetService("StarterGui"):SetCore("SendNotification",{
    Title = "Fe 1x1x1 hammer loaded!",
    Text = "Made by Jinxx0g :3 - Modified with Bug System",
    Button1 = "okie",
    Button2 = "-",
    Duration = 30
})

wait(1)

-- ===========================================
-- SERVI√áOS
-- ===========================================
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

-- ===========================================
-- EQUIPAR PARTES PRINCIPAIS DO 1x1x1x1
-- ===========================================
print("üíÄ Equipando partes principais do 1x1x1x1...")

local args1 = {
    [1] = {
        [1] = 121838871518791,  -- Dynamic Head
        [2] = 89124612345294,   -- Bra√ßo esquerdo  
        [3] = 84431523780379,   -- Bra√ßo direito
        [4] = 104281326156987,  -- Perna esquerda
        [5] = 94645302037763,   -- Perna direita
    }
}

game:GetService("ReplicatedStorage").Remotes.ChangeCharacterBody:InvokeServer(unpack(args1))
print("‚úÖ Partes principais equipadas!")

wait(0.5)

-- ===========================================
-- TESTE DE REMOTES PARA O TORSO
-- ===========================================
local torsoId = 87108996849145
print("üíÄ Testando diferentes remotes para o torso...")

pcall(function()
    print("üîÑ Tentando EquipTorso...")
    game:GetService("ReplicatedStorage").Remotes.EquipTorso:InvokeServer(torsoId)
    print("‚úÖ M√©todo EquipTorso funcionou!")
end)

wait(0.3)

pcall(function()
    print("üîÑ Tentando ChangeCharacterTorso...")
    game:GetService("ReplicatedStorage").Remotes.ChangeCharacterTorso:InvokeServer(torsoId)
    print("‚úÖ M√©todo ChangeCharacterTorso funcionou!")
end)

wait(0.3)

pcall(function()
    print("üîÑ Tentando UpdateBody...")
    game:GetService("ReplicatedStorage").Remotes.UpdateBody:InvokeServer({torso = torsoId})
    print("‚úÖ M√©todo UpdateBody funcionou!")
end)

wait(0.3)

pcall(function()
    print("üîÑ Tentando EquipAccessory para torso...")
    game:GetService("ReplicatedStorage").Remotes.EquipAccessory:InvokeServer(torsoId)
    print("‚úÖ M√©todo EquipAccessory funcionou!")
end)

wait(0.3)

pcall(function()
    print("üîÑ Tentando estrutura alternativa...")
    local altArgs = {["torso"] = torsoId}
    game:GetService("ReplicatedStorage").Remotes.ChangeCharacterBody:InvokeServer(altArgs)
    print("‚úÖ Estrutura alternativa funcionou!")
end)

wait(0.3)

pcall(function()
    print("üîÑ Tentando array s√≥ com torso...")
    local torsoOnly = {torsoId}
    game:GetService("ReplicatedStorage").Remotes.ChangeCharacterBody:InvokeServer(torsoOnly)
    print("‚úÖ Array s√≥ com torso funcionou!")
end)

print("üé≠ Testes conclu√≠dos! Verifique qual m√©todo funcionou.")

-- ===========================================
-- CUSTOM OUTFIT SETUP SCRIPT
-- ===========================================
local OUTFIT_CONFIG = {
    bodyColor = "Lime green",
    pants = 18867985369,
    shirt = 17601555639,
    accessories = {
        83540829879633,
        140587164069792,
        5319922112,
        5319900634,
        78744073453145
    },
    bundles = {
        73750101007369
    },
    equipDelay = 0.8,
    maxRetries = 3
}

local function log(message, emoji)
    emoji = emoji or "‚ÑπÔ∏è"
    print(emoji .. " " .. message)
end

local function waitWithFeedback(seconds, message)
    if message then
        log(message .. " (aguardando " .. seconds .. "s)", "‚è≥")
    end
    wait(seconds)
end

local function equipWithRetry(remoteName, id, itemType, retries)
    retries = retries or OUTFIT_CONFIG.maxRetries
    for attempt = 1, retries do
        local success = pcall(function()
            local args = {[1] = id}
            if remoteName == "ChangeBodyColor" then
                ReplicatedStorage.Remotes[remoteName]:FireServer(unpack(args))
            else
                ReplicatedStorage.Remotes[remoteName]:InvokeServer(unpack(args))
            end
        end)
        if success then
            log(itemType .. " (ID: " .. tostring(id) .. ") equipado com sucesso!", "‚úÖ")
            return true
        else
            if attempt < retries then
                log("Tentativa " .. attempt .. " falhou para " .. itemType .. ". Tentando novamente...", "‚ö†Ô∏è")
                wait(0.5)
            else
                log("Falha ao equipar " .. itemType .. " (ID: " .. tostring(id) .. ") ap√≥s " .. retries .. " tentativas", "‚ùå")
                return false
            end
        end
    end
    return false
end

local function applyBodyColor()
    log("Aplicando cor do corpo: " .. OUTFIT_CONFIG.bodyColor, "üé®")
    return equipWithRetry("ChangeBodyColor", OUTFIT_CONFIG.bodyColor, "Cor do corpo")
end

local function equipPants()
    log("Equipando cal√ßa...", "üëñ")
    return equipWithRetry("WearPants", OUTFIT_CONFIG.pants, "Cal√ßa")
end

local function equipShirt()
    log("Equipando camisa...", "üëï")
    return equipWithRetry("WearShirt", OUTFIT_CONFIG.shirt, "Camisa")
end

local function equipAccessories()
    log("Iniciando equipamento de acess√≥rios...", "üé≠")
    local successCount = 0
    for i, accessoryID in pairs(OUTFIT_CONFIG.accessories) do
        log("Equipando acess√≥rio " .. i .. "/" .. #OUTFIT_CONFIG.accessories, "‚öôÔ∏è")
        if equipWithRetry("Wear", accessoryID, "Acess√≥rio") then
            successCount = successCount + 1
        end
        if i < #OUTFIT_CONFIG.accessories then
            waitWithFeedback(OUTFIT_CONFIG.equipDelay, "Preparando pr√≥ximo acess√≥rio")
        end
    end
    log("Acess√≥rios equipados: " .. successCount .. "/" .. #OUTFIT_CONFIG.accessories, "üìä")
    return successCount
end

local function equipBundles()
    log("Iniciando equipamento de bundles...", "üì¶")
    local successCount = 0
    for i, bundleID in pairs(OUTFIT_CONFIG.bundles) do
        log("Equipando bundle " .. i .. "/" .. #OUTFIT_CONFIG.bundles, "‚öôÔ∏è")
        if equipWithRetry("WearBundle", bundleID, "Bundle") then
            successCount = successCount + 1
        end
        if i < #OUTFIT_CONFIG.bundles then
            waitWithFeedback(OUTFIT_CONFIG.equipDelay, "Preparando pr√≥ximo bundle")
        end
    end
    log("Bundles equipados: " .. successCount .. "/" .. #OUTFIT_CONFIG.bundles, "üìä")
    return successCount
end

log("INICIANDO SETUP DE OUTFIT CUSTOMIZADO", "üî•")

local results = {
    bodyColor = false,
    pants = false,
    shirt = false,
    accessories = 0,
    bundles = 0
}

results.bodyColor = applyBodyColor()
waitWithFeedback(1, "Sincronizando cor do corpo")
results.pants = equipPants()
waitWithFeedback(OUTFIT_CONFIG.equipDelay, "Sincronizando cal√ßa")
results.shirt = equipShirt()
waitWithFeedback(OUTFIT_CONFIG.equipDelay, "Sincronizando camisa")
results.accessories = equipAccessories()
waitWithFeedback(1, "Sincronizando acess√≥rios")
results.bundles = equipBundles()

-- ===========================================
-- BAN HAMMER TOOL
-- ===========================================
game:GetService("StarterGui"):SetCore("SendNotification",{
    Title = "1x1x1 Hammer Ready!",
    Text = "Use to bug players!",
    Duration = 10
})

local buggedPlayers = {}
local bugConnections = {}
local Remote = ReplicatedStorage.RE:FindFirstChild("1Gu1n")

local tool = Instance.new("Tool")
tool.Name = "1x1x1 Hammer"
tool.RequiresHandle = true
tool.CanBeDropped = true

local handle = Instance.new("Part")
handle.Name = "Handle"
handle.Size = Vector3.new(0.1,0.1,0.1)
handle.Massless = true
handle.Anchored = false
handle.CanCollide = false
handle.Transparency = 0.5
handle.Color = Color3.fromRGB(255,0,0)
local mesh = Instance.new("SpecialMesh", handle)
mesh.MeshType = Enum.MeshType.Sphere
mesh.Scale = Vector3.new(0.05,0.05,0.05)
handle.Parent = tool

local function createNotification(title,message,duration)
    game:GetService("StarterGui"):SetCore("SendNotification",{
        Title = title,
        Text = message,
        Duration = duration or 3
    })
end

local function bugPlayer(targetPlayer)
    if not Remote then
        createNotification("‚ùå Erro", "Remote n√£o encontrado!")
        return
    end
    if not targetPlayer or not targetPlayer.Character then
        createNotification("‚ùå Erro", "Player inv√°lido!")
        return
    end
    local playerName = targetPlayer.Name
    if buggedPlayers[playerName] then
        if bugConnections[playerName] then
            bugConnections[playerName]:Disconnect()
            bugConnections[playerName] = nil
        end
        buggedPlayers[playerName] = nil
        createNotification("üîì Bug Parado", playerName.." foi desbugado!")
        return
    end
    buggedPlayers[playerName] = true
    createNotification("üî® Bug Aplicado", playerName.." foi bugado com o Ban Hammer!")
    bugConnections[playerName] = RunService.Stepped:Connect(function()
        local target = Players:FindFirstChild(playerName)
        if not target or not target.Character or not target.Character:FindFirstChild("HumanoidRootPart") then
            if bugConnections[playerName] then
                bugConnections[playerName]:Disconnect()
                bugConnections[playerName] = nil
            end
            buggedPlayers[playerName] = nil
            return
        end
        local crazyVector = Vector3.new(
            math.random(1e12,1e18),
            math.random(1e12,1e18),
            math.random(1e12,1e18)
        )
        local args = {
            [1] = target.Character.HumanoidRootPart,
            [2] = target.Character.HumanoidRootPart,
            [3] = crazyVector,
            [4] = target.Character.HumanoidRootPart.Position,
            [5] = LocalPlayer.Backpack:FindFirstChild("Assault") and LocalPlayer.Backpack.Assault.GunScript_Local:FindFirstChild("MuzzleEffect"),
            [6] = LocalPlayer.Backpack:FindFirstChild("Assault") and LocalPlayer.Backpack.Assault.GunScript_Local:FindFirstChild("HitEffect"),
            [7] = 10000,
            [8] = 10000,
            [9] = {[1]=false},
            [10] = {
                [1]=10000,
                [2]=Vector3.new(3000,3000,3000),
                [3]=BrickColor.new(29),
                [4]=0.05,
                [5]=Enum.Material.SmoothPlastic,
                [6]=0.05
            },
            [11]=true,
            [12]=false
        }
        Remote:FireServer(unpack(args))
    end)
end

local function getPlayerFromMouse(mouse)
    local target = mouse.Target
    if not target then return nil end
    local character = target.Parent
    while character and not character:FindFirstChild("Humanoid") do
        character = character.Parent
    end
    if character and character:FindFirstChild("Humanoid") then
        return Players:GetPlayerFromCharacter(character)
    end
    return nil
end

local function applyAppearance()
    local character = LocalPlayer.Character
    if character and character:FindFirstChild("Humanoid") and character.Humanoid.RigType==Enum.HumanoidRigType.R15 then
        local args = {18854147316}
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Wear"):InvokeServer(unpack(args))
    end
end

tool.Equipped:Connect(function(mouse)
    applyAppearance()
    local character = tool.Parent
    if character and character:FindFirstChild("Humanoid") and character.Humanoid.RigType==Enum.HumanoidRigType.R15 then
        mouse.Button1Down:Connect(function()
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            local animator = humanoid and humanoid:FindFirstChildOfClass("Animator")
            if animator then
                local anim = Instance.new("Animation")
                anim.AnimationId = "rbxassetid://2410679501"
                local track = animator:LoadAnimation(anim)
                track:Play()
            end
            local targetPlayer = getPlayerFromMouse(mouse)
            if targetPlayer and targetPlayer~=LocalPlayer then
                bugPlayer(targetPlayer)
            else
                createNotification("üí° Info","Clique em um player para aplicar/remover o bug!")
            end
        end)
        createNotification("üî® 1x1x1 Hammer Equipado","Clique em players para aplicar/remover bug!")
    end
end)

tool.Unequipped:Connect(function()
    applyAppearance()
    createNotification("üî® 1x1x1 Hammer Guardado","Tool desequipado!")
end)

Players.PlayerRemoving:Connect(function(player)
    local playerName = player.Name
    if bugConnections[playerName] then
        bugConnections[playerName]:Disconnect()
        bugConnections[playerName] = nil
    end
    if buggedPlayers[playerName] then
        buggedPlayers[playerName] = nil
    end
end)

LocalPlayer.Chatted:Connect(function(message)
    if message:lower()=="/stopallbugs" then
        for _,connection in pairs(bugConnections) do
            if connection then connection:Disconnect() end
        end
        bugConnections={}
        buggedPlayers={}
        createNotification("üõë Todos os Bugs Parados","Todos os players foram desbugados!")
    elseif message:lower()=="/buggedlist" then
        local count=0
        for _ in pairs(buggedPlayers) do count=count+1 end
        createNotification("üìã Lista de Bugados",count>0 and (count.." players bugados") or "Nenhum player bugado")
    end
end)

tool.Parent = LocalPlayer.Backpack
createNotification("‚úÖ 1x1x1 Hammer Carregado","Tool adicionada ao invent√°rio! Use /stopallbugs para parar todos os bugs.")

-- ===========================================
-- EXECUTANDO SCRIPTS EXTERNOS 1x1x1x1
-- ===========================================
pcall(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/267266273ffsfs/1x1x1x1/refs/heads/main/Main.txt"))()
    print("‚úÖ Script 1x1x1x1 executado com sucesso!")
end)

pcall(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/267266273ffsfs/1x1x1x1speed/refs/heads/main/Main.txt"))()
    print("‚úÖ Script 1x1x1x1speed executado com sucesso!")
end)

-- ===========================================
-- RELAT√ìRIO FINAL
-- ===========================================
log("", "")
log("SETUP COMPLETO! OUTFIT + BAN HAMMER + EXTERNAL SCRIPTS EXECUTADOS", "üéâ")
log("Scripts externos rodando: 1x1x1x1 + 1x1x1x1speed", "‚ö°")
log("Obrigado por usar o script customizado! üôè", "üíô")
